
// Generated by Cadence Encounter(R) RTL Compiler RC14.28 - v14.20-s067_1

// Verification Directory fv/eq_checker 

module eq_checker22(in1, in2, eq_out);
  input [21:0] in1, in2;
  output eq_out;
  wire [21:0] in1, in2;
  wire eq_out;
  wire n_0, n_1, n_2, n_3, n_4, n_5, n_6, n_7;
  wire n_8, n_9, n_10, n_11, n_12, n_13, n_14, n_15;
  wire n_16, n_17, n_18, n_19, n_20, n_21, n_22, n_23;
  wire n_24, n_25, n_26, n_27, n_28, n_29, n_30, n_31;
  wire n_32, n_33, n_34, n_35;
  nor3$ g1552(.in0 (n_34), .in1 (n_35), .in2 (n_33), .out (eq_out));
  nand4$ g1553(.in0 (n_23), .in1 (n_32), .in2 (n_24), .in3 (n_27), .out
       (n_35));
  nand4$ g1554(.in0 (n_29), .in1 (n_31), .in2 (n_22), .in3 (n_26), .out
       (n_34));
  nand3$ g1555(.in0 (n_25), .in1 (n_28), .in2 (n_30), .out (n_33));
  nor2$ g1559(.in0 (n_21), .in1 (n_15), .out (n_32));
  nor2$ g1560(.in0 (n_0), .in1 (n_19), .out (n_31));
  nor2$ g1561(.in0 (n_18), .in1 (n_20), .out (n_30));
  nor2$ g1562(.in0 (n_16), .in1 (n_13), .out (n_29));
  nor2$ g1563(.in0 (n_9), .in1 (n_11), .out (n_28));
  nor2$ g1556(.in0 (n_10), .in1 (n_7), .out (n_27));
  nor2$ g1564(.in0 (n_12), .in1 (n_4), .out (n_26));
  nor2$ g1565(.in0 (n_1), .in1 (n_6), .out (n_25));
  nor2$ g1557(.in0 (n_8), .in1 (n_5), .out (n_24));
  nor2$ g1566(.in0 (n_17), .in1 (n_14), .out (n_23));
  nor2$ g1558(.in0 (n_3), .in1 (n_2), .out (n_22));
  xor2$ g1582(.in0 (in1[13]), .in1 (in2[13]), .out (n_21));
  xor2$ g1569(.in0 (in1[16]), .in1 (in2[16]), .out (n_20));
  xor2$ g1583(.in0 (in1[4]), .in1 (in2[4]), .out (n_19));
  xor2$ g1584(.in0 (in1[17]), .in1 (in2[17]), .out (n_18));
  xor2$ g1570(.in0 (in1[11]), .in1 (in2[11]), .out (n_17));
  xor2$ g1585(.in0 (in1[3]), .in1 (in2[3]), .out (n_16));
  xor2$ g1586(.in0 (in1[12]), .in1 (in2[12]), .out (n_15));
  xor2$ g1571(.in0 (in1[10]), .in1 (in2[10]), .out (n_14));
  xor2$ g1587(.in0 (in1[2]), .in1 (in2[2]), .out (n_13));
  xor2$ g1588(.in0 (in1[1]), .in1 (in2[1]), .out (n_12));
  xor2$ g1572(.in0 (in1[20]), .in1 (in2[20]), .out (n_11));
  xor2$ g1573(.in0 (in1[9]), .in1 (in2[9]), .out (n_10));
  xor2$ g1574(.in0 (in1[21]), .in1 (in2[21]), .out (n_9));
  xor2$ g1575(.in0 (in1[15]), .in1 (in2[15]), .out (n_8));
  xor2$ g1576(.in0 (in1[8]), .in1 (in2[8]), .out (n_7));
  xor2$ g1577(.in0 (in1[18]), .in1 (in2[18]), .out (n_6));
  xor2$ g1578(.in0 (in1[14]), .in1 (in2[14]), .out (n_5));
  xor2$ g1567(.in0 (in1[0]), .in1 (in2[0]), .out (n_4));
  xor2$ g1579(.in0 (in1[7]), .in1 (in2[7]), .out (n_3));
  xor2$ g1580(.in0 (in1[6]), .in1 (in2[6]), .out (n_2));
  xor2$ g1568(.in0 (in1[19]), .in1 (in2[19]), .out (n_1));
  xor2$ g1581(.in0 (in1[5]), .in1 (in2[5]), .out (n_0));
endmodule

