
// Generated by Cadence Encounter(R) RTL Compiler RC14.28 - v14.20-s067_1

// Verification Directory fv/eq_checker 

module eq_checker32(in1, in2, eq_out);
  input [31:0] in1, in2;
  output eq_out;
  wire [31:0] in1, in2;
  wire eq_out;
  wire n_0, n_1, n_2, n_3, n_4, n_5, n_6, n_7;
  wire n_8, n_9, n_10, n_11, n_12, n_13, n_14, n_15;
  wire n_16, n_17, n_18, n_19, n_20, n_21, n_22, n_23;
  wire n_24, n_25, n_26, n_27, n_28, n_29, n_30, n_31;
  wire n_32, n_33, n_34, n_35, n_36, n_37, n_38, n_39;
  wire n_40, n_41;
  nor2$ g2388(.in0 (n_40), .in1 (n_41), .out (eq_out));
  nand4$ g2390(.in0 (n_32), .in1 (n_39), .in2 (n_34), .in3 (n_37), .out
       (n_41));
  nand4$ g2389(.in0 (n_33), .in1 (n_36), .in2 (n_38), .in3 (n_35), .out
       (n_40));
  nor4$ g2398(.in0 (n_21), .in1 (n_27), .in2 (n_2), .in3 (n_9), .out
       (n_39));
  nor4$ g2391(.in0 (n_18), .in1 (n_25), .in2 (n_13), .in3 (n_22), .out
       (n_38));
  nor4$ g2394(.in0 (n_19), .in1 (n_23), .in2 (n_28), .in3 (n_16), .out
       (n_37));
  nor4$ g2395(.in0 (n_29), .in1 (n_15), .in2 (n_8), .in3 (n_20), .out
       (n_36));
  nor4$ g2392(.in0 (n_26), .in1 (n_31), .in2 (n_1), .in3 (n_17), .out
       (n_35));
  nor4$ g2396(.in0 (n_7), .in1 (n_10), .in2 (n_14), .in3 (n_4), .out
       (n_34));
  nor4$ g2397(.in0 (n_24), .in1 (n_5), .in2 (n_11), .in3 (n_12), .out
       (n_33));
  nor4$ g2393(.in0 (n_0), .in1 (n_3), .in2 (n_6), .in3 (n_30), .out
       (n_32));
  xor2$ g2410(.in0 (in1[18]), .in1 (in2[18]), .out (n_31));
  xor2$ g2411(.in0 (in1[4]), .in1 (in2[4]), .out (n_30));
  xor2$ g2412(.in0 (in1[25]), .in1 (in2[25]), .out (n_29));
  xor2$ g2413(.in0 (in1[3]), .in1 (in2[3]), .out (n_28));
  xor2$ g2399(.in0 (in1[10]), .in1 (in2[10]), .out (n_27));
  xor2$ g2414(.in0 (in1[17]), .in1 (in2[17]), .out (n_26));
  xor2$ g2415(.in0 (in1[30]), .in1 (in2[30]), .out (n_25));
  xor2$ g2400(.in0 (in1[21]), .in1 (in2[21]), .out (n_24));
  xor2$ g2416(.in0 (in1[2]), .in1 (in2[2]), .out (n_23));
  xor2$ g2417(.in0 (in1[28]), .in1 (in2[28]), .out (n_22));
  xor2$ g2401(.in0 (in1[9]), .in1 (in2[9]), .out (n_21));
  xor2$ g2418(.in0 (in1[24]), .in1 (in2[24]), .out (n_20));
  xor2$ g2419(.in0 (in1[1]), .in1 (in2[1]), .out (n_19));
  xor2$ g2402(.in0 (in1[29]), .in1 (in2[29]), .out (n_18));
  xor2$ g2420(.in0 (in1[16]), .in1 (in2[16]), .out (n_17));
  xor2$ g2421(.in0 (in1[0]), .in1 (in2[0]), .out (n_16));
  xor2$ g2403(.in0 (in1[26]), .in1 (in2[26]), .out (n_15));
  xor2$ g2422(.in0 (in1[15]), .in1 (in2[15]), .out (n_14));
  xor2$ g2423(.in0 (in1[31]), .in1 (in2[31]), .out (n_13));
  xor2$ g2404(.in0 (in1[20]), .in1 (in2[20]), .out (n_12));
  xor2$ g2424(.in0 (in1[23]), .in1 (in2[23]), .out (n_11));
  xor2$ g2425(.in0 (in1[14]), .in1 (in2[14]), .out (n_10));
  xor2$ g2405(.in0 (in1[8]), .in1 (in2[8]), .out (n_9));
  xor2$ g2426(.in0 (in1[27]), .in1 (in2[27]), .out (n_8));
  xor2$ g2427(.in0 (in1[13]), .in1 (in2[13]), .out (n_7));
  xor2$ g2406(.in0 (in1[7]), .in1 (in2[7]), .out (n_6));
  xor2$ g2428(.in0 (in1[22]), .in1 (in2[22]), .out (n_5));
  xor2$ g2429(.in0 (in1[12]), .in1 (in2[12]), .out (n_4));
  xor2$ g2407(.in0 (in1[6]), .in1 (in2[6]), .out (n_3));
  xor2$ g2430(.in0 (in1[11]), .in1 (in2[11]), .out (n_2));
  xor2$ g2408(.in0 (in1[19]), .in1 (in2[19]), .out (n_1));
  xor2$ g2409(.in0 (in1[5]), .in1 (in2[5]), .out (n_0));
endmodule

