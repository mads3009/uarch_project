
// Generated by Cadence Encounter(R) RTL Compiler RC14.28 - v14.20-s067_1

// Verification Directory fv/dc_hit_checker 

module eq_checker_WIDTH7(in1, in2, eq_out);
  input [6:0] in1, in2;
  output eq_out;
  wire [6:0] in1, in2;
  wire eq_out;
  wire n_0, n_1, n_2, n_3, n_4, n_5, n_6, n_7;
  wire n_8;
  nor2$ g514(.in0 (n_7), .in1 (n_8), .out (eq_out));
  nand3$ g515(.in0 (n_4), .in1 (n_1), .in2 (n_0), .out (n_8));
  nand4$ g516(.in0 (n_6), .in1 (n_2), .in2 (n_3), .in3 (n_5), .out
       (n_7));
  xnor2$ g517(.in0 (in1[1]), .in1 (in2[1]), .out (n_6));
  xnor2$ g518(.in0 (in1[0]), .in1 (in2[0]), .out (n_5));
  xnor2$ g519(.in0 (in1[6]), .in1 (in2[6]), .out (n_4));
  xnor2$ g520(.in0 (in1[3]), .in1 (in2[3]), .out (n_3));
  xnor2$ g521(.in0 (in1[2]), .in1 (in2[2]), .out (n_2));
  xnor2$ g522(.in0 (in1[5]), .in1 (in2[5]), .out (n_1));
  xnor2$ g523(.in0 (in1[4]), .in1 (in2[4]), .out (n_0));
endmodule

module eq_checker_WIDTH7_1(in1, in2, eq_out);
  input [6:0] in1, in2;
  output eq_out;
  wire [6:0] in1, in2;
  wire eq_out;
  wire n_0, n_1, n_2, n_3, n_4, n_5, n_6, n_7;
  wire n_8;
  nor2$ g514(.in0 (n_7), .in1 (n_8), .out (eq_out));
  nand3$ g515(.in0 (n_4), .in1 (n_1), .in2 (n_0), .out (n_8));
  nand4$ g516(.in0 (n_6), .in1 (n_2), .in2 (n_3), .in3 (n_5), .out
       (n_7));
  xnor2$ g517(.in0 (in1[1]), .in1 (in2[1]), .out (n_6));
  xnor2$ g518(.in0 (in1[0]), .in1 (in2[0]), .out (n_5));
  xnor2$ g519(.in0 (in1[6]), .in1 (in2[6]), .out (n_4));
  xnor2$ g520(.in0 (in1[3]), .in1 (in2[3]), .out (n_3));
  xnor2$ g521(.in0 (in1[2]), .in1 (in2[2]), .out (n_2));
  xnor2$ g522(.in0 (in1[5]), .in1 (in2[5]), .out (n_1));
  xnor2$ g523(.in0 (in1[4]), .in1 (in2[4]), .out (n_0));
endmodule

module dc_hit_checker(phy_tag, ts_tag2, ts_valid2, ts_tag1, ts_valid1,
     tag_eq2, tag_eq1, tlb_pcd, ren, wen, v_mem_read, dc_miss_ack,
     access2_reg, access2_combo, dc_rd_exp, io_ack, io_access,
     mem_rd_ready, mem_wr_done, mem_rd_busy, mem_wr_busy, dc_miss,
     dc_hit, dc_rd_hit, dc_wr_hit);
  input [6:0] phy_tag, ts_tag2, ts_tag1;
  input ts_valid2, ts_valid1, tlb_pcd, ren, wen, v_mem_read,
       dc_miss_ack, access2_reg, access2_combo, dc_rd_exp, io_ack,
       io_access;
  output tag_eq2, tag_eq1, mem_rd_ready, mem_wr_done, mem_rd_busy,
       mem_wr_busy, dc_miss, dc_hit, dc_rd_hit, dc_wr_hit;
  wire [6:0] phy_tag, ts_tag2, ts_tag1;
  wire ts_valid2, ts_valid1, tlb_pcd, ren, wen, v_mem_read,
       dc_miss_ack, access2_reg, access2_combo, dc_rd_exp, io_ack,
       io_access;
  wire tag_eq2, tag_eq1, mem_rd_ready, mem_wr_done, mem_rd_busy,
       mem_wr_busy, dc_miss, dc_hit, dc_rd_hit, dc_wr_hit;
  wire n_0, n_1, n_2, n_3, n_4, n_5, n_6, n_7;
  wire n_8, n_9, n_10, n_11, n_12, n_13, n_14, n_15;
  wire n_16, n_17, n_18, n_19, n_20, n_21;
  eq_checker_WIDTH7 u_eq_checker2(.in1 (phy_tag), .in2 (ts_tag2),
       .eq_out (tag_eq2));
  eq_checker_WIDTH7_1 u_eq_checker3(.in1 (phy_tag), .in2 (ts_tag1),
       .eq_out (tag_eq1));
  and3$ g1579(.in0 (n_6), .in1 (n_21), .in2 (v_mem_read), .out
       (mem_rd_busy));
  and3$ g1580(.in0 (n_6), .in1 (n_20), .in2 (wen), .out (mem_wr_busy));
  nand2$ g1581(.in0 (n_21), .in1 (n_6), .out (mem_rd_ready));
  nand2$ g1582(.in0 (n_20), .in1 (n_6), .out (mem_wr_done));
  nand4$ g1583(.in0 (n_14), .in1 (n_11), .in2 (n_15), .in3 (n_7), .out
       (n_21));
  nand2$ g1584(.in0 (n_18), .in1 (n_19), .out (dc_hit));
  nand4$ g1585(.in0 (n_14), .in1 (n_11), .in2 (n_13), .in3 (n_7), .out
       (n_20));
  nor2$ g1586(.in0 (n_16), .in1 (n_17), .out (dc_miss));
  inv1$ g1587(.in (n_19), .out (dc_rd_hit));
  nand3$ g1588(.in0 (n_11), .in1 (n_15), .in2 (n_7), .out (n_19));
  inv1$ g1589(.in (n_18), .out (dc_wr_hit));
  nand3$ g1590(.in0 (n_11), .in1 (n_13), .in2 (n_7), .out (n_18));
  or2$ g1591(.in0 (n_12), .in1 (tlb_pcd), .out (n_17));
  nor2$ g1592(.in0 (n_10), .in1 (n_5), .out (n_16));
  nor2$ g1593(.in0 (n_5), .in1 (n_8), .out (n_15));
  nor2$ g1594(.in0 (n_9), .in1 (io_access), .out (n_14));
  nor2$ g1595(.in0 (n_5), .in1 (n_1), .out (n_13));
  mux2$ g1596(.s0 (ren), .in0 (n_1), .in1 (dc_rd_exp), .outb (n_12));
  mux2$ g1597(.s0 (tag_eq2), .in0 (n_2), .in1 (n_0), .outb (n_10));
  mux2$ g1598(.s0 (tag_eq2), .in0 (ts_valid1), .in1 (ts_valid2), .outb
       (n_11));
  nor2$ g1599(.in0 (n_4), .in1 (access2_reg), .out (n_9));
  nand2$ g1600(.in0 (n_3), .in1 (ren), .out (n_8));
  nor2$ g1601(.in0 (tlb_pcd), .in1 (dc_miss_ack), .out (n_7));
  nand2$ g1602(.in0 (io_ack), .in1 (io_access), .out (n_6));
  nor2$ g1603(.in0 (tag_eq2), .in1 (tag_eq1), .out (n_5));
  inv1$ g1604(.in (access2_combo), .out (n_4));
  inv1$ g1605(.in (dc_rd_exp), .out (n_3));
  inv1$ g1606(.in (ts_valid1), .out (n_2));
  inv1$ g1607(.in (wen), .out (n_1));
  inv1$ g1608(.in (ts_valid2), .out (n_0));
endmodule

