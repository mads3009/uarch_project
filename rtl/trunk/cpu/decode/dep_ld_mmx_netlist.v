
// Generated by Cadence Encounter(R) RTL Compiler RC14.28 - v14.20-s067_1

// Verification Directory fv/dep_ld_mmx 

module dep_ld_mmx(mm1_needed_in, mm2_needed_in, sr1_rm, sr2_rm, mod,
     mod_rm_pr, ld_mm_in, ret_op, ld_mm, mm1_needed, mm2_needed,
     mm_sr1_sel_L, mm_sr2_sel);
  input mm1_needed_in, mm2_needed_in, sr1_rm, sr2_rm, mod_rm_pr,
       ld_mm_in, ret_op;
  input [1:0] mod;
  output ld_mm, mm1_needed, mm2_needed, mm_sr1_sel_L, mm_sr2_sel;
  wire mm1_needed_in, mm2_needed_in, sr1_rm, sr2_rm, mod_rm_pr,
       ld_mm_in, ret_op;
  wire [1:0] mod;
  wire ld_mm, mm1_needed, mm2_needed, mm_sr1_sel_L, mm_sr2_sel;
  wire n_0, n_1, n_3;
  and2$ g221(.in0 (n_3), .in1 (ld_mm_in), .out (ld_mm));
  and2$ g222(.in0 (n_3), .in1 (mm1_needed_in), .out (mm1_needed));
  and2$ g223(.in0 (n_1), .in1 (mm2_needed_in), .out (mm2_needed));
  nand2$ g225(.in0 (n_0), .in1 (sr2_rm), .out (n_1));
  nand2$ g224(.in0 (n_0), .in1 (sr1_rm), .out (n_3));
  nand3$ g226(.in0 (mod[0]), .in1 (mod[1]), .in2 (mod_rm_pr), .out
       (n_0));
endmodule

