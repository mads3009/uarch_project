
// Generated by Cadence Encounter(R) RTL Compiler RC14.28 - v14.20-s067_1

// Verification Directory fv/mem_fsm 

module addr_ch_logic(clk, rst_n, addr, addr_ch);
  input clk, rst_n;
  input [31:0] addr;
  output addr_ch;
  wire clk, rst_n;
  wire [31:0] addr;
  wire addr_ch;
  wire [31:0] r_addr_del;
  wire UNCONNECTED, UNCONNECTED0, UNCONNECTED1, UNCONNECTED2,
       UNCONNECTED3, UNCONNECTED4, UNCONNECTED5, UNCONNECTED6;
  wire UNCONNECTED7, UNCONNECTED8, n_1, n_2, n_3, n_4, n_5, n_6;
  wire n_7, n_8, n_9, n_10, n_11, n_12, n_13, n_14;
  wire n_15, n_16, n_17, n_18, n_19, n_20, n_21, n_22;
  nand4$ g332(.in0 (n_17), .in1 (n_21), .in2 (n_22), .in3 (n_18), .out
       (addr_ch));
  nor4$ g333(.in0 (n_12), .in1 (n_16), .in2 (n_20), .in3 (n_11), .out
       (n_22));
  nor4$ g334(.in0 (n_10), .in1 (n_15), .in2 (n_19), .in3 (n_9), .out
       (n_21));
  nand3$ g335(.in0 (n_7), .in1 (n_14), .in2 (n_8), .out (n_20));
  nand3$ g336(.in0 (n_5), .in1 (n_13), .in2 (n_6), .out (n_19));
  xnor2$ g337(.in0 (addr[14]), .in1 (r_addr_del[14]), .out (n_18));
  xnor2$ g338(.in0 (addr[13]), .in1 (r_addr_del[13]), .out (n_17));
  xor2$ g339(.in0 (addr[5]), .in1 (r_addr_del[5]), .out (n_16));
  xor2$ g340(.in0 (addr[10]), .in1 (r_addr_del[10]), .out (n_15));
  xnor2$ g341(.in0 (addr[7]), .in1 (r_addr_del[7]), .out (n_14));
  xnor2$ g342(.in0 (addr[9]), .in1 (r_addr_del[9]), .out (n_13));
  nor2$ g343(.in0 (addr[8]), .in1 (n_3), .out (n_12));
  nor2$ g344(.in0 (addr[6]), .in1 (n_4), .out (n_11));
  nor2$ g345(.in0 (addr[12]), .in1 (n_2), .out (n_10));
  nor2$ g346(.in0 (addr[11]), .in1 (n_1), .out (n_9));
  nand2$ g347(.in0 (addr[6]), .in1 (n_4), .out (n_8));
  nand2$ g348(.in0 (addr[8]), .in1 (n_3), .out (n_7));
  nand2$ g349(.in0 (addr[11]), .in1 (n_1), .out (n_6));
  nand2$ g350(.in0 (addr[12]), .in1 (n_2), .out (n_5));
  dff$ \r_addr_del_reg[5] (.r (rst_n), .s (1'b1), .clk (clk), .d
       (addr[5]), .q (r_addr_del[5]), .qbar (UNCONNECTED));
  dff$ \r_addr_del_reg[14] (.r (rst_n), .s (1'b1), .clk (clk), .d
       (addr[14]), .q (r_addr_del[14]), .qbar (UNCONNECTED0));
  inv1$ g353(.in (r_addr_del[6]), .out (n_4));
  dff$ \r_addr_del_reg[6] (.r (rst_n), .s (1'b1), .clk (clk), .d
       (addr[6]), .q (r_addr_del[6]), .qbar (UNCONNECTED1));
  inv1$ g355(.in (r_addr_del[8]), .out (n_3));
  dff$ \r_addr_del_reg[8] (.r (rst_n), .s (1'b1), .clk (clk), .d
       (addr[8]), .q (r_addr_del[8]), .qbar (UNCONNECTED2));
  dff$ \r_addr_del_reg[13] (.r (rst_n), .s (1'b1), .clk (clk), .d
       (addr[13]), .q (r_addr_del[13]), .qbar (UNCONNECTED3));
  dff$ \r_addr_del_reg[10] (.r (rst_n), .s (1'b1), .clk (clk), .d
       (addr[10]), .q (r_addr_del[10]), .qbar (UNCONNECTED4));
  inv1$ g359(.in (r_addr_del[12]), .out (n_2));
  dff$ \r_addr_del_reg[12] (.r (rst_n), .s (1'b1), .clk (clk), .d
       (addr[12]), .q (r_addr_del[12]), .qbar (UNCONNECTED5));
  dff$ \r_addr_del_reg[9] (.r (rst_n), .s (1'b1), .clk (clk), .d
       (addr[9]), .q (r_addr_del[9]), .qbar (UNCONNECTED6));
  inv1$ g362(.in (r_addr_del[11]), .out (n_1));
  dff$ \r_addr_del_reg[11] (.r (rst_n), .s (1'b1), .clk (clk), .d
       (addr[11]), .q (r_addr_del[11]), .qbar (UNCONNECTED7));
  dff$ \r_addr_del_reg[7] (.r (rst_n), .s (1'b1), .clk (clk), .d
       (addr[7]), .q (r_addr_del[7]), .qbar (UNCONNECTED8));
endmodule

module counter_CNT_LMT4_1(clk, rst_n, cond, done);
  input clk, rst_n, cond;
  output done;
  wire clk, rst_n, cond;
  wire done;
  wire [2:0] count;
  wire UNCONNECTED9, UNCONNECTED10, UNCONNECTED11, n_1, n_2, n_3, n_4,
       n_5;
  wire n_6, n_7, n_11;
  and3$ g32(.in0 (n_11), .in1 (n_7), .in2 (count[2]), .out (done));
  inv1$ g33(.in (count[0]), .out (n_11));
  inv1$ g34(.in (count[1]), .out (n_7));
  dff$ \count_reg[2] (.r (rst_n), .s (1'b1), .clk (clk), .d (n_6), .q
       (count[2]), .qbar (UNCONNECTED9));
  dff$ \count_reg[1] (.r (rst_n), .s (1'b1), .clk (clk), .d (n_5), .q
       (count[1]), .qbar (UNCONNECTED10));
  and2$ g47(.in0 (n_4), .in1 (cond), .out (n_6));
  and2$ g48(.in0 (cond), .in1 (n_3), .out (n_5));
  xor2$ g49(.in0 (n_1), .in1 (count[2]), .out (n_4));
  dff$ \count_reg[0] (.r (rst_n), .s (1'b1), .clk (clk), .d (n_2), .q
       (count[0]), .qbar (UNCONNECTED11));
  xor2$ g51(.in0 (count[0]), .in1 (count[1]), .out (n_3));
  and2$ g52(.in0 (cond), .in1 (n_11), .out (n_2));
  nor2$ g53(.in0 (n_11), .in1 (n_7), .out (n_1));
endmodule

module counter_CNT_LMT3(clk, rst_n, cond, done);
  input clk, rst_n, cond;
  output done;
  wire clk, rst_n, cond;
  wire done;
  wire [2:0] count;
  wire UNCONNECTED12, UNCONNECTED13, UNCONNECTED14, n_1, n_2, n_3, n_4,
       n_5;
  wire n_6, n_7, n_8;
  and3$ g28(.in0 (count[1]), .in1 (n_8), .in2 (count[0]), .out (done));
  inv1$ g29(.in (count[2]), .out (n_8));
  dff$ \count_reg[2] (.r (rst_n), .s (1'b1), .clk (clk), .d (n_7), .q
       (count[2]), .qbar (UNCONNECTED12));
  dff$ \count_reg[1] (.r (rst_n), .s (1'b1), .clk (clk), .d (n_6), .q
       (count[1]), .qbar (UNCONNECTED13));
  and2$ g48(.in0 (cond), .in1 (n_5), .out (n_7));
  and2$ g49(.in0 (cond), .in1 (n_4), .out (n_6));
  xnor2$ g50(.in0 (n_2), .in1 (count[2]), .out (n_5));
  dff$ \count_reg[0] (.r (rst_n), .s (1'b1), .clk (clk), .d (n_3), .q
       (count[0]), .qbar (UNCONNECTED14));
  xor2$ g52(.in0 (count[1]), .in1 (count[0]), .out (n_4));
  and2$ g53(.in0 (cond), .in1 (n_1), .out (n_3));
  nand2$ g54(.in0 (count[1]), .in1 (count[0]), .out (n_2));
  inv1$ g55(.in (count[0]), .out (n_1));
endmodule

module counter_CNT_LMT2(clk, rst_n, cond, done);
  input clk, rst_n, cond;
  output done;
  wire clk, rst_n, cond;
  wire done;
  wire [2:0] count;
  wire UNCONNECTED15, UNCONNECTED16, UNCONNECTED17, n_1, n_2, n_3, n_4,
       n_5;
  wire n_6, n_7, n_12;
  nor3$ g29(.in0 (count[2]), .in1 (n_1), .in2 (count[0]), .out (done));
  inv1$ g30(.in (count[0]), .out (n_12));
  inv1$ g31(.in (count[1]), .out (n_1));
  dff$ \count_reg[2] (.r (rst_n), .s (1'b1), .clk (clk), .d (n_7), .q
       (count[2]), .qbar (UNCONNECTED15));
  dff$ \count_reg[1] (.r (rst_n), .s (1'b1), .clk (clk), .d (n_6), .q
       (count[1]), .qbar (UNCONNECTED16));
  and2$ g49(.in0 (n_5), .in1 (cond), .out (n_7));
  and2$ g50(.in0 (cond), .in1 (n_4), .out (n_6));
  xor2$ g51(.in0 (n_3), .in1 (count[2]), .out (n_5));
  dff$ \count_reg[0] (.r (rst_n), .s (1'b1), .clk (clk), .d (n_2), .q
       (count[0]), .qbar (UNCONNECTED17));
  xor2$ g53(.in0 (count[1]), .in1 (count[0]), .out (n_4));
  nor2$ g54(.in0 (n_12), .in1 (n_1), .out (n_3));
  and2$ g55(.in0 (cond), .in1 (n_12), .out (n_2));
endmodule

module counter_CNT_LMT4(clk, rst_n, cond, done);
  input clk, rst_n, cond;
  output done;
  wire clk, rst_n, cond;
  wire done;
  wire [2:0] count;
  wire UNCONNECTED18, UNCONNECTED19, UNCONNECTED20, n_1, n_2, n_3, n_4,
       n_5;
  wire n_6, n_7, n_11;
  and3$ g30(.in0 (n_11), .in1 (n_7), .in2 (count[2]), .out (done));
  inv1$ g31(.in (count[0]), .out (n_11));
  inv1$ g32(.in (count[1]), .out (n_7));
  dff$ \count_reg[2] (.r (rst_n), .s (1'b1), .clk (clk), .d (n_6), .q
       (count[2]), .qbar (UNCONNECTED18));
  dff$ \count_reg[1] (.r (rst_n), .s (1'b1), .clk (clk), .d (n_5), .q
       (count[1]), .qbar (UNCONNECTED19));
  and2$ g47(.in0 (n_4), .in1 (cond), .out (n_6));
  and2$ g48(.in0 (cond), .in1 (n_3), .out (n_5));
  xor2$ g49(.in0 (n_1), .in1 (count[2]), .out (n_4));
  dff$ \count_reg[0] (.r (rst_n), .s (1'b1), .clk (clk), .d (n_2), .q
       (count[0]), .qbar (UNCONNECTED20));
  xor2$ g51(.in0 (count[0]), .in1 (count[1]), .out (n_3));
  and2$ g52(.in0 (cond), .in1 (n_11), .out (n_2));
  nor2$ g53(.in0 (n_11), .in1 (n_7), .out (n_1));
endmodule

module counter_CNT_LMT2_1(clk, rst_n, cond, done);
  input clk, rst_n, cond;
  output done;
  wire clk, rst_n, cond;
  wire done;
  wire [2:0] count;
  wire UNCONNECTED21, UNCONNECTED22, UNCONNECTED23, n_1, n_2, n_3, n_4,
       n_5;
  wire n_6, n_7, n_12;
  nor3$ g29(.in0 (count[2]), .in1 (n_1), .in2 (count[0]), .out (done));
  inv1$ g30(.in (count[0]), .out (n_12));
  inv1$ g31(.in (count[1]), .out (n_1));
  dff$ \count_reg[2] (.r (rst_n), .s (1'b1), .clk (clk), .d (n_7), .q
       (count[2]), .qbar (UNCONNECTED21));
  dff$ \count_reg[1] (.r (rst_n), .s (1'b1), .clk (clk), .d (n_6), .q
       (count[1]), .qbar (UNCONNECTED22));
  and2$ g49(.in0 (n_5), .in1 (cond), .out (n_7));
  and2$ g50(.in0 (cond), .in1 (n_4), .out (n_6));
  xor2$ g51(.in0 (n_3), .in1 (count[2]), .out (n_5));
  dff$ \count_reg[0] (.r (rst_n), .s (1'b1), .clk (clk), .d (n_2), .q
       (count[0]), .qbar (UNCONNECTED23));
  xor2$ g53(.in0 (count[1]), .in1 (count[0]), .out (n_4));
  nor2$ g54(.in0 (n_12), .in1 (n_1), .out (n_3));
  and2$ g55(.in0 (cond), .in1 (n_12), .out (n_2));
endmodule

module mem_fsm(clk, rst_n, cyc, we, addr, ack, ce, oe, wr, rd);
  input clk, rst_n, cyc, we;
  input [31:0] addr;
  output ack, ce, oe, wr, rd;
  wire clk, rst_n, cyc, we;
  wire [31:0] addr;
  wire ack, ce, oe, wr, rd;
  wire [3:0] curr_st;
  wire UNCONNECTED24, UNCONNECTED25, UNCONNECTED26, UNCONNECTED_HIER_Z,
       UNCONNECTED_HIER_Z0, UNCONNECTED_HIER_Z1, UNCONNECTED_HIER_Z2,
       UNCONNECTED_HIER_Z3;
  wire UNCONNECTED_HIER_Z4, UNCONNECTED_HIER_Z5, UNCONNECTED_HIER_Z6,
       UNCONNECTED_HIER_Z7, UNCONNECTED_HIER_Z8, UNCONNECTED_HIER_Z9,
       UNCONNECTED_HIER_Z10, UNCONNECTED_HIER_Z11;
  wire UNCONNECTED_HIER_Z12, UNCONNECTED_HIER_Z13,
       UNCONNECTED_HIER_Z14, UNCONNECTED_HIER_Z15,
       UNCONNECTED_HIER_Z16, UNCONNECTED_HIER_Z17,
       UNCONNECTED_HIER_Z18, UNCONNECTED_HIER_Z19;
  wire UNCONNECTED_HIER_Z20, n_1, n_2, n_3, n_4, n_5, n_6, n_7;
  wire n_8, n_9, n_10, n_11, n_12, n_13, n_14, n_15;
  wire n_16, n_17, n_18, n_19, n_20, n_21, n_22, n_23;
  wire n_24, n_25, n_26, n_27, n_28, n_29, n_30, n_31;
  wire n_32, n_33, n_34, n_39, n_41, n_42, n_43, n_44;
  wire n_45, n_46, n_47, n_48, n_49, n_50, n_57, w_addr_ch;
  wire w_cyc_574, w_rd_done, w_start, w_wr_done, w_wr_wait_2n_done,
       w_wr_wait_n_done;
  addr_ch_logic u_addr_ch_logic(.clk (clk), .rst_n (rst_n), .addr
       ({UNCONNECTED_HIER_Z20, UNCONNECTED_HIER_Z19,
       UNCONNECTED_HIER_Z18, UNCONNECTED_HIER_Z17,
       UNCONNECTED_HIER_Z16, UNCONNECTED_HIER_Z15,
       UNCONNECTED_HIER_Z14, UNCONNECTED_HIER_Z13,
       UNCONNECTED_HIER_Z12, UNCONNECTED_HIER_Z11,
       UNCONNECTED_HIER_Z10, UNCONNECTED_HIER_Z9, UNCONNECTED_HIER_Z8,
       UNCONNECTED_HIER_Z7, UNCONNECTED_HIER_Z6, UNCONNECTED_HIER_Z5,
       UNCONNECTED_HIER_Z4, addr[14:5], UNCONNECTED_HIER_Z3,
       UNCONNECTED_HIER_Z2, UNCONNECTED_HIER_Z1, UNCONNECTED_HIER_Z0,
       UNCONNECTED_HIER_Z}), .addr_ch (w_addr_ch));
  counter_CNT_LMT4_1 u_rd_done_gen(.clk (clk), .rst_n (rst_n), .cond
       (n_1), .done (w_rd_done));
  counter_CNT_LMT3 u_start_gen(.clk (clk), .rst_n (rst_n), .cond
       (n_57), .done (w_start));
  counter_CNT_LMT2 u_wr_done_gen(.clk (clk), .rst_n (rst_n), .cond
       (n_2), .done (w_wr_done));
  counter_CNT_LMT4 u_wr_wait_2n_done_gen(.clk (clk), .rst_n (rst_n),
       .cond (n_3), .done (w_wr_wait_2n_done));
  counter_CNT_LMT2_1 u_wr_wait_n_done_gen(.clk (clk), .rst_n (rst_n),
       .cond (n_39), .done (w_wr_wait_n_done));
  inv1$ g598(.in (n_47), .out (n_39));
  inv1$ g599(.in (n_46), .out (n_3));
  inv1$ g597(.in (w_cyc_574), .out (ce));
  inv1$ g600(.in (n_45), .out (n_1));
  inv1$ g601(.in (n_49), .out (n_2));
  and2$ g814(.in0 (w_cyc_574), .in1 (n_34), .out (ack));
  nand2$ g815(.in0 (w_cyc_574), .in1 (n_41), .out (oe));
  and3$ g816(.in0 (n_27), .in1 (w_cyc_574), .in2 (n_43), .out (n_57));
  nor4$ g817(.in0 (n_32), .in1 (n_30), .in2 (n_33), .in3 (n_29), .out
       (w_cyc_574));
  nand2$ g818(.in0 (n_48), .in1 (n_44), .out (n_34));
  and2$ g819(.in0 (n_45), .in1 (n_44), .out (rd));
  and2$ g820(.in0 (n_49), .in1 (n_48), .out (wr));
  or3$ g821(.in0 (addr[16]), .in1 (n_31), .in2 (addr[15]), .out (n_33));
  nand2$ g822(.in0 (n_27), .in1 (curr_st[2]), .out (n_48));
  nand2$ g823(.in0 (n_26), .in1 (n_43), .out (n_47));
  nand2$ g824(.in0 (n_28), .in1 (n_43), .out (n_49));
  nand2$ g825(.in0 (n_26), .in1 (curr_st[2]), .out (n_44));
  nand2$ g826(.in0 (n_28), .in1 (curr_st[2]), .out (n_45));
  nand2$ g827(.in0 (n_27), .in1 (n_43), .out (n_50));
  nand3$ g828(.in0 (curr_st[2]), .in1 (n_42), .in2 (curr_st[1]), .out
       (n_46));
  or4$ g829(.in0 (addr[22]), .in1 (addr[23]), .in2 (addr[24]), .in3
       (addr[21]), .out (n_32));
  or4$ g830(.in0 (addr[30]), .in1 (addr[31]), .in2 (n_25), .in3
       (addr[29]), .out (n_31));
  or4$ g831(.in0 (addr[26]), .in1 (addr[27]), .in2 (addr[28]), .in3
       (addr[25]), .out (n_30));
  or4$ g832(.in0 (addr[18]), .in1 (addr[19]), .in2 (addr[20]), .in3
       (addr[17]), .out (n_29));
  nor2$ g833(.in0 (n_42), .in1 (curr_st[1]), .out (n_28));
  nor2$ g834(.in0 (curr_st[0]), .in1 (curr_st[1]), .out (n_27));
  and2$ g835(.in0 (curr_st[0]), .in1 (curr_st[1]), .out (n_26));
  inv1$ g836(.in (cyc), .out (n_25));
  inv1$ g837(.in (curr_st[2]), .out (n_43));
  inv1$ g838(.in (curr_st[0]), .out (n_42));
  inv1$ g839(.in (we), .out (n_41));
  dff$ \curr_st_reg[0] (.r (rst_n), .s (1'b1), .clk (clk), .d (n_24),
       .q (curr_st[0]), .qbar (UNCONNECTED24));
  dff$ \curr_st_reg[1] (.r (rst_n), .s (1'b1), .clk (clk), .d (n_23),
       .q (curr_st[1]), .qbar (UNCONNECTED25));
  dff$ \curr_st_reg[2] (.r (rst_n), .s (1'b1), .clk (clk), .d (n_22),
       .q (curr_st[2]), .qbar (UNCONNECTED26));
  nand4$ g802(.in0 (n_8), .in1 (n_15), .in2 (n_17), .in3 (n_21), .out
       (n_24));
  nand4$ g803(.in0 (n_5), .in1 (n_20), .in2 (n_14), .in3 (n_12), .out
       (n_23));
  nand4$ g804(.in0 (n_19), .in1 (n_14), .in2 (n_15), .in3 (n_11), .out
       (n_22));
  or2$ g805(.in0 (n_18), .in1 (w_addr_ch), .out (n_21));
  and2$ g806(.in0 (n_18), .in1 (n_48), .out (n_20));
  nand3$ g807(.in0 (w_cyc_574), .in1 (w_addr_ch), .in2 (n_16), .out
       (n_19));
  nand2$ g808(.in0 (w_cyc_574), .in1 (n_16), .out (n_18));
  and4$ g809(.in0 (n_13), .in1 (n_10), .in2 (n_7), .in3 (n_47), .out
       (n_17));
  and4$ g810(.in0 (we), .in1 (n_42), .in2 (n_43), .in3 (curr_st[1]),
       .out (n_16));
  and2$ g811(.in0 (n_9), .in1 (n_45), .out (n_15));
  and2$ g812(.in0 (n_8), .in1 (n_6), .out (n_14));
  or3$ g813(.in0 (n_50), .in1 (n_4), .in2 (n_41), .out (n_13));
  nand2$ g840(.in0 (w_rd_done), .in1 (n_1), .out (n_12));
  nand2$ g841(.in0 (w_wr_done), .in1 (n_2), .out (n_11));
  nand2$ g842(.in0 (w_wr_wait_2n_done), .in1 (n_3), .out (n_10));
  or2$ g843(.in0 (oe), .in1 (n_50), .out (n_9));
  or2$ g844(.in0 (oe), .in1 (n_44), .out (n_8));
  or2$ g845(.in0 (w_wr_done), .in1 (n_49), .out (n_7));
  or2$ g846(.in0 (w_wr_wait_2n_done), .in1 (n_46), .out (n_6));
  or2$ g847(.in0 (w_wr_wait_n_done), .in1 (n_47), .out (n_5));
  inv1$ g848(.in (w_start), .out (n_4));
endmodule

